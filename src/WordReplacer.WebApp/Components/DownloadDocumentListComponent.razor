@using WordReplacer.Models.Enums
@inject IStringLocalizer<DownloadDocumentListResource> Localizer
@using MudBlazor

<div class="container overflow-auto" style="max-height: 200px;">
    @if (Downloads is not null)
    {
        @if (Downloads.Count > 0)
        {
            @foreach (var download in Downloads)
            {
                <div class="row">
                    <div class="col-9">
                        @download.FileName
                    </div>
                    <div class="col-3">
                        @if (download.Status == DownloadStatus.Success)
                        {
                            <MudIcon Icon="@Icons.Material.Filled.Done" Class="primary-color" />
                        }
                        else if (download.Status == DownloadStatus.Error)
                        {
                            <MudIcon Icon="@Icons.Material.Filled.Clear" Class="error-color" />
                        }
                        else
                        {
                            <MudProgressCircular Indeterminate="@download.IsProgressIndeterminate" Value="@download.Progress" Size="Size.Small" />
                        }
                    </div>
                </div>
            }
        }
        else
        {
            <div class="row">
                <div class="col-12">
                    @Localizer["noDownloadsYet"]
                </div>
            </div>
        }
    }
    else if(DownloadsDict is not null)
    {
        @if (DownloadsDict.Values.Count > 0)
        {
            @foreach (var download in DownloadsDict.Values)
            {
                <div class="row">
                    <div class="col-9">
                        @download.FileName
                    </div>
                    <div class="col-3">
                        @if (download.Status == DownloadStatus.Success)
                        {
                            <MudIcon Icon="@Icons.Material.Filled.Done" Class="primary-color" />
                        }
                        else if (download.Status == DownloadStatus.Error)
                        {
                            <MudIcon Icon="@Icons.Material.Filled.Clear" Class="error-color" />
                        }
                        else
                        {
                            <MudProgressCircular Indeterminate="@download.IsProgressIndeterminate" Value="@download.Progress" Size="Size.Small" />
                        }
                    </div>
                </div>
            }
        }
        else
        {
            <div class="row">
                <div class="col-12">
                    @Localizer["noDownloadsYet"]
                </div>
            </div>
        }
    }
</div>

@code {

    [Parameter]
    public List<Download>? Downloads { get; set; }

    [Parameter]
    public EventCallback<List<Download>> DownloadsChanged { get; set; }
    
    [Parameter]
    public Dictionary<string, Download>? DownloadsDict { get; set; }

    [Parameter]
    public EventCallback<Dictionary<string, Download>> DownloadsDictChanged { get; set; }

}