@inject ISnackbar Snackbar
@inject IStringLocalizer<InputFileResource> Localizer

<MudPaper Class="p-2">
    <InputFile OnChange="@FilesReady" multiple />
    <MudText Class="mt-2" Typo="Typo.body2">@Localizer["selectFileLabel"]</MudText>
</MudPaper>
@if (Document.Files.Any())
{
    <div class="mt-1">@(Document.Files.Count > 1 ? Localizer["selectedManyFileLabel"] : Localizer["selectedSingleFileLabel"])
        <span class="text-info">@string.Join(", ", Document.Files.Select(f => f.Name))</span>
    </div>
}

@code {

    [Parameter]
    public Document Document { get; set; } = new();
    
    [Parameter]
    public EventCallback<Document> DocumentChanged { get; set; }
    
    private async Task FilesReady(InputFileChangeEventArgs e)
    {
        Document.Files.Clear();
        foreach (IBrowserFile file in e.GetMultipleFiles())
        {
            if (file.ContentType != "application/vnd.openxmlformats-officedocument.wordprocessingml.document")
            {
                Snackbar.Add(Localizer["toasterWrongFileTypeDescription"], Severity.Warning, options =>
                {
                    options.Icon = Icons.Material.Filled.Block;
                });
            }
            else
            {
                Document.Files.Add(file);
            }
        }

        await DocumentChanged.InvokeAsync(Document);
    }
}