@inject IStringLocalizer<GeneralResource> Localizer

@if (TextsToReplace.Count > 0)
{
    foreach (var textToReplace in TextsToReplace)
    {
        <MudGrid Row="true" Justify="Justify.Center" Spacing="5" Class="m-4">
            <MudItem xs="12">
                <div class="d-flex align-center justify-space-between p-1">
                    <MudTextField
                        T = "string"
                        Label="@textToReplace"
                        Disabled="true"
                        Variant="Variant.Text"
                        Class="mr-4"/>
                    <MudTextField
                        T = "string"
                        Label="@Localizer["labelTextAddValues"]"
                        Immediate="true"
                        Variant="Variant.Text"/>
                    <MudButton
                        Variant="Variant.Filled"
                        StartIcon="@Icons.Material.Filled.Add"
                        Color="Color.Primary"
                        Size="Size.Large"
                        Class="ml-4"
                        OnClick="AddMoreReplacementValues"
                        Disabled="false">
                        @Localizer["buttonTextAddValues"]
                    </MudButton>
                </div>
            </MudItem>
        </MudGrid>
        <br />
    }
}
else
{
    <MudAlert Severity="Severity.Info" Variant="Variant.Filled" Icon="@Icons.Material.Outlined.Info">
        @Localizer["emptyValueListInfo"]
    </MudAlert>
}

@code {
    [Parameter] public required IList<string> TextsToReplace { get; set; }

    private void AddMoreReplacementValues()
    {

    }
}