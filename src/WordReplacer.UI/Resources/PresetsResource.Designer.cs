//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WordReplacer.UI.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class PresetsResource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal PresetsResource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("WordReplacer.UI.Resources.PresetsResource", typeof(PresetsResource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete All.
        /// </summary>
        internal static string btnDeleteAll {
            get {
                return ResourceManager.GetString("btnDeleteAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete.
        /// </summary>
        internal static string btnDeletePreset {
            get {
                return ResourceManager.GetString("btnDeletePreset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Load.
        /// </summary>
        internal static string btnLoadPreset {
            get {
                return ResourceManager.GetString("btnLoadPreset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create.
        /// </summary>
        internal static string btnSavePreset {
            get {
                return ResourceManager.GetString("btnSavePreset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to close.
        /// </summary>
        internal static string close {
            get {
                return ResourceManager.GetString("close", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to delete.
        /// </summary>
        internal static string delete {
            get {
                return ResourceManager.GetString("delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This will delete all presets.
        /// </summary>
        internal static string deleteAllPrompt {
            get {
                return ResourceManager.GetString("deleteAllPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This will delete {0}.
        /// </summary>
        internal static string deleteConfirmationPrompt {
            get {
                return ResourceManager.GetString("deleteConfirmationPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete presets.
        /// </summary>
        internal static string deleteTitle {
            get {
                return ResourceManager.GetString("deleteTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to load.
        /// </summary>
        internal static string load {
            get {
                return ResourceManager.GetString("load", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You will lose your current preset if it is not saved.
        /// </summary>
        internal static string loadLoseCurrentValuesPrompt {
            get {
                return ResourceManager.GetString("loadLoseCurrentValuesPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Load presets.
        /// </summary>
        internal static string loadTitle {
            get {
                return ResourceManager.GetString("loadTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to save.
        /// </summary>
        internal static string save {
            get {
                return ResourceManager.GetString("save", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This will replace {0}.
        /// </summary>
        internal static string saveOverrideConfirmation {
            get {
                return ResourceManager.GetString("saveOverrideConfirmation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preset name.
        /// </summary>
        internal static string savePresetNameLabel {
            get {
                return ResourceManager.GetString("savePresetNameLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save presets.
        /// </summary>
        internal static string saveTitle {
            get {
                return ResourceManager.GetString("saveTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All presets were successfully deleted.
        /// </summary>
        internal static string toasterAllPresetsDeleted {
            get {
                return ResourceManager.GetString("toasterAllPresetsDeleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sorry but the {0} preset is corrupted. Please save a new one with the same name or delete it..
        /// </summary>
        internal static string toasterCorruptedPresetError {
            get {
                return ResourceManager.GetString("toasterCorruptedPresetError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Empty preset name is not allowed.
        /// </summary>
        internal static string toasterEmptyPresetName {
            get {
                return ResourceManager.GetString("toasterEmptyPresetName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error while removing all preset.
        /// </summary>
        internal static string toasterErrorDeleteAllPresets {
            get {
                return ResourceManager.GetString("toasterErrorDeleteAllPresets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error while deleting {0}.
        /// </summary>
        internal static string toasterErrorDeletePreset {
            get {
                return ResourceManager.GetString("toasterErrorDeletePreset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error while loading {0}.
        /// </summary>
        internal static string toasterErrorLoadingPreset {
            get {
                return ResourceManager.GetString("toasterErrorLoadingPreset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error while loading the saved presets.
        /// </summary>
        internal static string toasterErrorLoadingPresets {
            get {
                return ResourceManager.GetString("toasterErrorLoadingPresets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a preset to delete.
        /// </summary>
        internal static string toasterErrorNoPresetSelectedToDelete {
            get {
                return ResourceManager.GetString("toasterErrorNoPresetSelectedToDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a preset to load.
        /// </summary>
        internal static string toasterErrorSelectPresetFirst {
            get {
                return ResourceManager.GetString("toasterErrorSelectPresetFirst", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is not presets to delete.
        /// </summary>
        internal static string toasterNoPresetToDelete {
            get {
                return ResourceManager.GetString("toasterNoPresetToDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} was successfully deleted.
        /// </summary>
        internal static string toasterSuccessfullyDeleted {
            get {
                return ResourceManager.GetString("toasterSuccessfullyDeleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} was successfully loaded.
        /// </summary>
        internal static string toasterSuccessLoadPreset {
            get {
                return ResourceManager.GetString("toasterSuccessLoadPreset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} was successfully saved.
        /// </summary>
        internal static string toasterSuccessSave {
            get {
                return ResourceManager.GetString("toasterSuccessSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add some values before creating the preset.
        /// </summary>
        internal static string toasterValuesListEmpty {
            get {
                return ResourceManager.GetString("toasterValuesListEmpty", resourceCulture);
            }
        }
    }
}
